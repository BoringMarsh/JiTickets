<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.edu.tongji.springbackend.mapper.ActivityMapper">
    <insert id="insertActivity" parameterType="activity" useGeneratedKeys="true" keyProperty="act_id">
        INSERT INTO activity (act_name, act_intro, act_location, ticket_price, upload_time,
                              reg_start_time, reg_end_time, act_time, act_capacity, act_left,
                              act_rating, rating_num, soc_id)
        VALUES (#{actName}, #{actIntro}, #{actLocation}, #{ticketPrice}, #{uploadTime},
                #{regStartTime}, #{regEndTime}, #{actTime}, #{actCapacity}, #{actLeft},
                #{actRating}, #{ratingNum}, #{socId})
    </insert>

    <select id="getCount" resultType="int">
        SELECT COUNT(*)
        FROM activity
    </select>

    <select id="getCountBySocId" resultType="int">
        SELECT COUNT(*)
        FROM activity
        WHERE soc_id = #{socId};
    </select>

    <select id="getByActId" resultType="activity">
        SELECT * FROM activity
        WHERE act_id = #{actId};
    </select>

    <select id="getByPage" resultType="activity">
        SELECT * FROM activity
        ORDER BY upload_time DESC
        LIMIT #{pageSize} OFFSET #{offset};
    </select>

    <update id="update" parameterType="activity">
        UPDATE activity
        <set>
            <if test="actName != null and actIntro != ''">
                act_name = #{actName},
            </if>
            <if test="actIntro != null and actIntro != ''">
                act_intro = #{actIntro},
            </if>
            <if test="actLocation != null and actLocation != ''">
                act_location = #{actLocation},
            </if>
            <if test="ticketPrice != null">
                ticket_price = #{ticketPrice},
            </if>
            <if test="uploadTime != null">
                upload_time = #{uploadTime},
            </if>
            <if test="regStartTime != null">
                reg_start_time = #{regStartTime},
            </if>
            <if test="regEndTime != null">
                reg_end_time = #{regEndTime},
            </if>
            <if test="actTime != null">
                act_time = #{actTime},
            </if>
            <if test="actCapacity != null">
                act_capacity = #{actCapacity},
            </if>
            <if test="actLeft != null">
                act_left = #{actLeft},
            </if>
            <if test="actRating != null">
                act_rating = #{actRating},
            </if>
            <if test="ratingNum != null">
                rating_num = #{ratingNum}
            </if>
        </set>
        WHERE act_id = #{actId};
    </update>

    <resultMap id="activityResultMap" type="activity">
        <!-- Add result mappings for each field in the Student class -->
    </resultMap>
    <select id="getActivityListByRange" resultMap="activityResultMap">
        SELECT * FROM activity
        LIMIT #{pageSize} OFFSET #{startRow}
    </select>

    <select id="getSocActivities" resultMap="activityResultMap" parameterType="java.util.Map">
        SELECT a.*
        FROM activity a
                 LEFT JOIN activity_keyword ak ON a.act_id = ak.act_id
        WHERE
          (
            (CASE
              WHEN 0 = a.act_left THEN 0
              WHEN NOW() > a.reg_end_time THEN -1
              ELSE 1
            END) = #{status}
            OR #{status} IS NULL
          )
          AND (ak.keyword = #{keyword} OR #{keyword} IS NULL)
          AND (a.act_name LIKE CONCAT('%', #{query}, '%') OR #{query} IS NULL)
          AND (DATE(a.upload_time) = DATE(#{uploadTime}) OR #{uploadTime} IS NULL)
          AND (DATE(a.reg_end_time) = DATE(#{regEndTime}) OR #{regEndTime} IS NULL)
        ORDER BY
            CASE
                WHEN #{order} = 1 THEN a.upload_time
                WHEN #{order} = 2 THEN a.reg_end_time
                ELSE a.act_id
                END
            LIMIT #{pageSize} OFFSET #{page * pageSize}
    </select>

    <select id="getByPageAndSocId" resultType="activity">
        SELECT * FROM activity
        WHERE soc_id = #{socId}
        LIMIT #{pageSize} OFFSET #{startRow};
    </select>
</mapper>